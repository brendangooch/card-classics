import AbstractCanvasComponent from "./abstract-canvas-component.js";
export default class CanvasFont extends AbstractCanvasComponent {
    constructor() {
        super(...arguments);
        this.props = {
            size: 10,
            families: ['sans-serif'],
            italic: false,
            weight: 'normal'
        };
    }
    size(size) {
        this.props.size = size;
        this.update();
        return this;
    }
    family(family) {
        this.props.families.unshift(family);
        this.update();
        return this;
    }
    italic() {
        this.props.italic = true;
        this.update();
        return this;
    }
    bold() {
        this.weight('bold');
        this.update();
        return this;
    }
    weight(weight) {
        this.props.weight = weight;
        this.update();
        return this;
    }
    kerning(value) {
        this.ctx.fontKerning = value;
    }
    stretch(value) {
        this.ctx.fontStretch = value;
    }
    variantCaps(value) {
        this.ctx.fontVariantCaps = value;
    }
    reset() {
        this.props.size = 10;
        this.props.families = ['sans-serif'];
        this.props.italic = false;
        this.props.weight = 'normal';
        this.ctx.fontKerning = 'auto';
        this.ctx.fontStretch = 'normal';
        this.ctx.fontVariantCaps = 'normal';
        this.update();
    }
    get sz() {
        return `${this.props.size}px`;
    }
    get fm() {
        return this.props.families.join();
    }
    get st() {
        if (this.props.italic)
            return 'italic';
        return '';
    }
    get wt() {
        if (this.props.weight !== 'normal')
            return this.props.weight;
        return '';
    }
    update() {
        this.ctx.font = `${this.st} ${this.wt} ${this.sz} ${this.fm}`;
    }
}
;
